name: 🚀 Deploy to Google Compute Engine

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to GCE VM
    runs-on: ubuntu-latest

    steps:
      # Checkout the latest code
      - name: ⬇️ Checkout Code
        uses: actions/checkout@v3

      # Setup SSH key for connecting to GCE
      - name: 🔐 Setup SSH Key
        run: |
          KEY_FILE="gce-deploy-key-$(date +%Y%m%d%H%M%S)"
          echo "${{ secrets.GCE_SSH_PRIVATE_KEY }}" > $KEY_FILE
          chmod 600 $KEY_FILE

      # Add the GCE host to known hosts to prevent SSH authenticity issues
      - name: 🔁 Add SSH Host to Known Hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.GCE_HOST }} >> ~/.ssh/known_hosts

      # Deploy the application to GCE using Docker Compose
      - name: 🚀 Deploy via SSH to GCE
        run: |
          ssh -i $KEY_FILE ${{ secrets.GCE_USER }}@${{ secrets.GCE_HOST }} << 'EOF'
            set -e
            echo "Pulling latest code from the main branch..."
            cd Parable-Mind
            git pull origin main || { echo "Failed to pull latest code"; exit 1; }
            echo "Shutting down existing containers..."
            docker-compose down --volumes --remove-orphans
            sleep 10
            echo "Starting new containers..."
            docker-compose up -d --build
            echo "Deployment to GCE complete!"
          EOF

      # Notify Success to Discord
      - name: ✅ Notify Success to Discord
        if: success()
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d '{"content": "🚀 Deployment to Google Compute Engine was successful! Branch: main Commit: ${{ github.sha }}"}' \
          ${{ secrets.DISCORD_WEBHOOK_URL }}

      # Notify Failure to Discord
      - name: ❌ Notify Failure to Discord
        if: failure()
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d '{"content": "❌ Deployment to Google Compute Engine failed. Check the logs for more details."}' \
          ${{ secrets.DISCORD_WEBHOOK_URL }}
